# Financials Version 1 API
swagger: 2.0

# This is your document metadata
info:
  version: "1.0.0"
  title: Financial Management System APIs
  host: phoenix-qa.egovernments.org
  description: All APIs available in the system are defined here.
  contact:
    name: Manikanta PT
schemes:
  - https
  - http
basePath: 'egf-masters'
paths:
    /banks/_search:
      post:
        summary: Get the list of banks
        description: banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: code
            type: string
            in: query
            description: code of the Bank
            maxLength: 50
          - name: name
            type: string
            in: query
            description: name of the Bank
            maxLength: 100
          - name: description
            type: string
            in: query
            description: description of the Bank
            maxLength: 250
          - name: active
            type: boolean
            in: query
            description: Whether Bank is Active or not. If the value is TRUE, then Bank is active,If the value is FALSE then Bank is inactive,Default value is true
          - name: type
            type: string
            in: query
            description: type of the Bank
            maxLength: 50
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Bank retrieved Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /banks/_create:
      post:
        summary: Create  new  banks
        description: Create  new banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/BankRequest'
        responses:
          201:
            description: Bank created Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /banks/{uniqueId}/_update:
      post:
        summary: Update any of the banks
        description: Update any of the banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/BankRequest'
        responses:
          200:
            description: Bank update Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /bankbranches/_search:
      post:
        summary: Get the list of bankbranches
        description: bankbranches
        tags: 
          - Masters
          - BankBranch
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: bank
            type: integer
            format: int64
            in: query
            description: bank of the BankBranch
          - name: code
            type: string
            in: query
            description: code of the BankBranch
            maxLength: 50
          - name: name
            type: string
            in: query
            description: name of the BankBranch
            maxLength: 50
          - name: address
            type: string
            in: query
            description: address of the BankBranch
            maxLength: 50
          - name: address2
            type: string
            in: query
            description: address2 of the BankBranch
            maxLength: 50
          - name: city
            type: string
            in: query
            description: city of the BankBranch
            maxLength: 50
          - name: state
            type: string
            in: query
            description: state of the BankBranch
            maxLength: 50
          - name: pincode
            type: string
            in: query
            description: pincode of the BankBranch
            maxLength: 50
          - name: phone
            type: string
            in: query
            description: Phone number of the BankBranch
            maxLength: 15
          - name: fax
            type: string
            in: query
            description: Fax number of the BankBranch
            maxLength: 15
          - name: contactPerson
            type: string
            in: query
            description: contact person of the BankBranch
            maxLength: 50
          - name: active
            type: boolean
            in: query
            description: Whether BankBranch is Active or not. If the value is TRUE, then BankBranch is active,If the value is FALSE then BankBranch is inactive,Default value is true
          - name: description
            type: string
            in: query
            description: description of the BankBranch
            maxLength: 256
          - name: micr
            type: string
            in: query
            description: MICR Code of the BankBranch
            maxLength: 50
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: BankBranch retrieved Successfully
            schema:
              $ref: '#/definitions/BankBranchResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /bankbranches/_create:
      post:
        summary: Create  new  bankbranches
        description: Create  new bankbranches
        tags: 
          - Masters
          - BankBranch
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankBranchRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/BankBranchRequest'
        responses:
          201:
            description: BankBranch created Successfully
            schema:
              $ref: '#/definitions/BankBranchResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /bankbranches/{uniqueId}/_update:
      post:
        summary: Update any of the bankbranches
        description: Update any of the bankbranches
        tags: 
          - Masters
          - BankBranch
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankBranchRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/BankBranchRequest'
        responses:
          200:
            description: BankBranch update Successfully
            schema:
              $ref: '#/definitions/BankBranchResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /bankaccounts/_search:
      post:
        summary: Get the list of bankaccounts
        description: bankaccounts
        tags: 
          - Masters
          - BankAccount
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: bankBranch
            type: integer
            format: int64
            in: query
            description: bank branch of the BankAccount
          - name: chartOfAccount
            type: integer
            format: int64
            in: query
            description: chart of account of the BankAccount
          - name: fund
            type: integer
            format: int64
            in: query
            description: fund of the BankAccount
          - name: accountNumber
            type: string
            in: query
            description: account number of the BankAccount
            maxLength: 25
          - name: accountType
            type: string
            in: query
            description: account type of the BankAccount
          - name: description
            type: string
            in: query
            description: description of the BankAccount
            maxLength: 256
          - name: active
            type: boolean
            in: query
            description: Whether BankAccount is Active or not. If the value is TRUE, then BankAccount is active,If the value is FALSE then BankAccount is inactive,Default value is true
          - name: payTo
            type: string
            in: query
            description: pay to of the BankAccount
            maxLength: 100
          - name: type
            type: integer
            format: int64
            in: query
            description: type of the BankAccount
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: BankAccount retrieved Successfully
            schema:
              $ref: '#/definitions/BankAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /bankaccounts/_create:
      post:
        summary: Create  new  bankaccounts
        description: Create  new bankaccounts
        tags: 
          - Masters
          - BankAccount
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankAccountRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/BankAccountRequest'
        responses:
          201:
            description: BankAccount created Successfully
            schema:
              $ref: '#/definitions/BankAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /bankaccounts/{uniqueId}/_update:
      post:
        summary: Update any of the bankaccounts
        description: Update any of the bankaccounts
        tags: 
          - Masters
          - BankAccount
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankAccountRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/BankAccountRequest'
        responses:
          200:
            description: BankAccount update Successfully
            schema:
              $ref: '#/definitions/BankAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /financialyears/_search:
      post:
        summary: Get the list of financialyears
        description: financialyears
        tags: 
          - Masters
          - FinancialYear
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: finYearRange
            type: string
            in: query
            description: fin year range of the FinancialYear
            maxLength: 25
          - name: startingDate
            type: string
            format: date
            in: query
            description: starting date of the FinancialYear
          - name: endingDate
            type: string
            format: date
            in: query
            description: ending date of the FinancialYear
          - name: active
            type: boolean
            in: query
            description: Whether FinancialYear is Active or not. If the value is TRUE, then FinancialYear is active,If the value is FALSE then FinancialYear is inactive,Default value is true
          - name: isActiveForPosting
            type: boolean
            in: query
            description: is active for posting of the FinancialYear
          - name: isClosed
            type: boolean
            in: query
            description: is closed of the FinancialYear
          - name: transferClosingBalance
            type: boolean
            in: query
            description: transfer closing balance of the FinancialYear
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: FinancialYear retrieved Successfully
            schema:
              $ref: '#/definitions/FinancialYearResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /financialyears/_create:
      post:
        summary: Create  new  financialyears
        description: Create  new financialyears
        tags: 
          - Masters
          - FinancialYear
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: financialYearRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FinancialYearRequest'
        responses:
          201:
            description: FinancialYear created Successfully
            schema:
              $ref: '#/definitions/FinancialYearResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /financialyears/{uniqueId}/_update:
      post:
        summary: Update any of the financialyears
        description: Update any of the financialyears
        tags: 
          - Masters
          - FinancialYear
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: financialYearRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FinancialYearRequest'
        responses:
          200:
            description: FinancialYear update Successfully
            schema:
              $ref: '#/definitions/FinancialYearResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /fiscalperiods/_search:
      post:
        summary: Get the list of fiscalperiods
        description: fiscalperiods
        tags: 
          - Masters
          - FiscalPeriod
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the FiscalPeriod
            maxLength: 25
          - name: financialYear
            type: integer
            format: int64
            in: query
            description: financial year of the FiscalPeriod
          - name: startingDate
            type: string
            format: date
            in: query
            description: starting date of the FiscalPeriod
          - name: endingDate
            type: string
            format: date
            in: query
            description: ending date of the FiscalPeriod
          - name: active
            type: boolean
            in: query
            description: Whether FiscalPeriod is Active or not. If the value is TRUE, then FiscalPeriod is active,If the value is FALSE then FiscalPeriod is inactive,Default value is true
          - name: isActiveForPosting
            type: boolean
            in: query
            description: is active for posting of the FiscalPeriod
          - name: isClosed
            type: boolean
            in: query
            description: is closed of the FiscalPeriod
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: FiscalPeriod retrieved Successfully
            schema:
              $ref: '#/definitions/FiscalPeriodResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /fiscalperiods/_create:
      post:
        summary: Create  new  fiscalperiods
        description: Create  new fiscalperiods
        tags: 
          - Masters
          - FiscalPeriod
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fiscalPeriodRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FiscalPeriodRequest'
        responses:
          201:
            description: FiscalPeriod created Successfully
            schema:
              $ref: '#/definitions/FiscalPeriodResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /fiscalperiods/{uniqueId}/_update:
      post:
        summary: Update any of the fiscalperiods
        description: Update any of the fiscalperiods
        tags: 
          - Masters
          - FiscalPeriod
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fiscalPeriodRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FiscalPeriodRequest'
        responses:
          200:
            description: FiscalPeriod update Successfully
            schema:
              $ref: '#/definitions/FiscalPeriodResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /functions/_search:
      post:
        summary: Get the list of functions
        description: functions
        tags: 
          - Masters
          - Function
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the Function
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the Function
            maxLength: 16
          - name: level
            type: integer
            format: int32
            in: query
            description: level of the Function
          - name: active
            type: boolean
            in: query
            description: Whether Function is Active or not. If the value is TRUE, then Function is active,If the value is FALSE then Function is inactive,Default value is true
          - name: isParent
            type: boolean
            in: query
            description: is parent of the Function
          - name: parentId
            type: integer
            format: int64
            in: query
            description: parent id of the Function
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Function retrieved Successfully
            schema:
              $ref: '#/definitions/FunctionResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /functions/_create:
      post:
        summary: Create  new  functions
        description: Create  new functions
        tags: 
          - Masters
          - Function
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: functionRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FunctionRequest'
        responses:
          201:
            description: Function created Successfully
            schema:
              $ref: '#/definitions/FunctionResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /functions/{uniqueId}/_update:
      post:
        summary: Update any of the functions
        description: Update any of the functions
        tags: 
          - Masters
          - Function
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: functionRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FunctionRequest'
        responses:
          200:
            description: Function update Successfully
            schema:
              $ref: '#/definitions/FunctionResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /functionaries/_search:
      post:
        summary: Get the list of functionaries
        description: functionaries
        tags: 
          - Masters
          - Functionary
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: code
            type: string
            in: query
            description: code of the Functionary
            maxLength: 16
          - name: name
            type: string
            in: query
            description: name of the Functionary
            maxLength: 256
          - name: active
            type: boolean
            in: query
            description: Whether Functionary is Active or not. If the value is TRUE, then Functionary is active,If the value is FALSE then Functionary is inactive,Default value is true
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Functionary retrieved Successfully
            schema:
              $ref: '#/definitions/FunctionaryResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /functionaries/_create:
      post:
        summary: Create  new  functionaries
        description: Create  new functionaries
        tags: 
          - Masters
          - Functionary
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: functionaryRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FunctionaryRequest'
        responses:
          201:
            description: Functionary created Successfully
            schema:
              $ref: '#/definitions/FunctionaryResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /functionaries/{uniqueId}/_update:
      post:
        summary: Update any of the functionaries
        description: Update any of the functionaries
        tags: 
          - Masters
          - Functionary
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: functionaryRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FunctionaryRequest'
        responses:
          200:
            description: Functionary update Successfully
            schema:
              $ref: '#/definitions/FunctionaryResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /funds/_search:
      post:
        summary: Get the list of funds
        description: funds
        tags: 
          - Masters
          - Fund
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the Fund
            maxLength: 50
          - name: code
            type: string
            in: query
            description: code of the Fund
            maxLength: 50
          - name: identifier
            type: string
            in: query
            description: identifier of the Fund
          - name: level
            type: integer
            format: int64
            in: query
            description: level of the Fund
          - name: parentId
            type: integer
            format: int64
            in: query
            description: parent id of the Fund
          - name: isParent
            type: boolean
            in: query
            description: is parent of the Fund
          - name: active
            type: boolean
            in: query
            description: Whether Fund is Active or not. If the value is TRUE, then Fund is active,If the value is FALSE then Fund is inactive,Default value is true
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Fund retrieved Successfully
            schema:
              $ref: '#/definitions/FundResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /funds/_create:
      post:
        summary: Create  new  funds
        description: Create  new funds
        tags: 
          - Masters
          - Fund
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fundRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FundRequest'
        responses:
          201:
            description: Fund created Successfully
            schema:
              $ref: '#/definitions/FundResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /funds/{uniqueId}/_update:
      post:
        summary: Update any of the funds
        description: Update any of the funds
        tags: 
          - Masters
          - Fund
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fundRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FundRequest'
        responses:
          200:
            description: Fund update Successfully
            schema:
              $ref: '#/definitions/FundResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /fundsources/_search:
      post:
        summary: Get the list of fundsources
        description: fundsources
        tags: 
          - Masters
          - Fundsource
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: code
            type: string
            in: query
            description: code of the Fundsource
            maxLength: 25
          - name: name
            type: string
            in: query
            description: name of the Fundsource
            maxLength: 25
          - name: type
            type: string
            in: query
            description: type of the Fundsource
            maxLength: 25
          - name: fundSource
            type: integer
            format: int64
            in: query
            description: fund source of the Fundsource
          - name: llevel
            type: number
            format: double
            in: query
            description: llevel of the Fundsource
          - name: active
            type: boolean
            in: query
            description: Whether Fundsource is Active or not. If the value is TRUE, then Fundsource is active,If the value is FALSE then Fundsource is inactive,Default value is true
          - name: isParent
            type: boolean
            in: query
            description: is parent of the Fundsource
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Fundsource retrieved Successfully
            schema:
              $ref: '#/definitions/FundsourceResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /fundsources/_create:
      post:
        summary: Create  new  fundsources
        description: Create  new fundsources
        tags: 
          - Masters
          - Fundsource
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fundsourceRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FundsourceRequest'
        responses:
          201:
            description: Fundsource created Successfully
            schema:
              $ref: '#/definitions/FundsourceResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /fundsources/{uniqueId}/_update:
      post:
        summary: Update any of the fundsources
        description: Update any of the fundsources
        tags: 
          - Masters
          - Fundsource
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: fundsourceRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/FundsourceRequest'
        responses:
          200:
            description: Fundsource update Successfully
            schema:
              $ref: '#/definitions/FundsourceResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /schemes/_search:
      post:
        summary: Get the list of schemes
        description: schemes
        tags: 
          - Masters
          - Scheme
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: fund
            type: integer
            format: int64
            in: query
            description: fund of the Scheme
          - name: code
            type: string
            in: query
            description: code of the Scheme
            maxLength: 25
          - name: name
            type: string
            in: query
            description: name of the Scheme
            maxLength: 25
          - name: validFrom
            type: string
            format: date
            in: query
            description: valid from of the Scheme
          - name: validTo
            type: string
            format: date
            in: query
            description: valid to of the Scheme
          - name: active
            type: boolean
            in: query
            description: Whether Scheme is Active or not. If the value is TRUE, then Scheme is active,If the value is FALSE then Scheme is inactive,Default value is true
          - name: description
            type: string
            in: query
            description: description of the Scheme
            maxLength: 256
          - name: boundary
            type: integer
            format: int64
            in: query
            description: boundary of the Scheme
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Scheme retrieved Successfully
            schema:
              $ref: '#/definitions/SchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /schemes/_create:
      post:
        summary: Create  new  schemes
        description: Create  new schemes
        tags: 
          - Masters
          - Scheme
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: schemeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/SchemeRequest'
        responses:
          201:
            description: Scheme created Successfully
            schema:
              $ref: '#/definitions/SchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /schemes/{uniqueId}/_update:
      post:
        summary: Update any of the schemes
        description: Update any of the schemes
        tags: 
          - Masters
          - Scheme
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: schemeRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/SchemeRequest'
        responses:
          200:
            description: Scheme update Successfully
            schema:
              $ref: '#/definitions/SchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /subschemes/_search:
      post:
        summary: Get the list of subschemes
        description: subschemes
        tags: 
          - Masters
          - SubScheme
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: scheme
            type: integer
            format: int64
            in: query
            description: scheme of the SubScheme
          - name: code
            type: string
            in: query
            description: code of the SubScheme
            maxLength: 50
          - name: name
            type: string
            in: query
            description: name of the SubScheme
            maxLength: 50
          - name: validFrom
            type: string
            format: date
            in: query
            description: valid from of the SubScheme
          - name: validTo
            type: string
            format: date
            in: query
            description: valid to of the SubScheme
          - name: active
            type: boolean
            in: query
            description: Whether SubScheme is Active or not. If the value is TRUE, then SubScheme is active,If the value is FALSE then SubScheme is inactive,Default value is true
          - name: departmentId
            type: integer
            format: int64
            in: query
            description: department id of the SubScheme
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: SubScheme retrieved Successfully
            schema:
              $ref: '#/definitions/SubSchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /subschemes/_create:
      post:
        summary: Create  new  subschemes
        description: Create  new subschemes
        tags: 
          - Masters
          - SubScheme
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: subSchemeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/SubSchemeRequest'
        responses:
          201:
            description: SubScheme created Successfully
            schema:
              $ref: '#/definitions/SubSchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /subschemes/{uniqueId}/_update:
      post:
        summary: Update any of the subschemes
        description: Update any of the subschemes
        tags: 
          - Masters
          - SubScheme
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: subSchemeRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/SubSchemeRequest'
        responses:
          200:
            description: SubScheme update Successfully
            schema:
              $ref: '#/definitions/SubSchemeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /suppliers/_search:
      post:
        summary: Get the list of suppliers
        description: suppliers
        tags: 
          - Masters
          - Supplier
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: code
            type: string
            in: query
            description: code of the Supplier
            maxLength: 50
          - name: name
            type: string
            in: query
            description: name of the Supplier
            maxLength: 50
          - name: address
            type: string
            in: query
            description: address of the Supplier
            maxLength: 300
          - name: mobile
            type: string
            in: query
            description: mobile of the Supplier
            maxLength: 10
          - name: email
            type: string
            in: query
            description: email of the Supplier
            maxLength: 25
          - name: description
            type: string
            in: query
            description: description of the Supplier
            maxLength: 250
          - name: active
            type: boolean
            in: query
            description: Whether Supplier is Active or not. If the value is TRUE, then Supplier is active,If the value is FALSE then Supplier is inactive,Default value is true
          - name: panNo
            type: string
            in: query
            description: pan no of the Supplier
            maxLength: 10
          - name: tinNo
            type: string
            in: query
            description: tin no of the Supplier
            maxLength: 20
          - name: registationNo
            type: string
            in: query
            description: registation no of the Supplier
            maxLength: 25
          - name: bankAccount
            type: string
            in: query
            description: bank account of the Supplier
            maxLength: 25
          - name: ifscCode
            type: string
            in: query
            description: ifsc code of the Supplier
            maxLength: 12
          - name: bank
            type: integer
            format: int64
            in: query
            description: bank of the Supplier
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Supplier retrieved Successfully
            schema:
              $ref: '#/definitions/SupplierResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /suppliers/_create:
      post:
        summary: Create  new  suppliers
        description: Create  new suppliers
        tags: 
          - Masters
          - Supplier
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: supplierRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/SupplierRequest'
        responses:
          201:
            description: Supplier created Successfully
            schema:
              $ref: '#/definitions/SupplierResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /suppliers/{uniqueId}/_update:
      post:
        summary: Update any of the suppliers
        description: Update any of the suppliers
        tags: 
          - Masters
          - Supplier
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: supplierRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/SupplierRequest'
        responses:
          200:
            description: Supplier update Successfully
            schema:
              $ref: '#/definitions/SupplierResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /accountdetailtypes/_search:
      post:
        summary: Get the list of accountdetailtypes
        description: accountdetailtypes
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the AccountDetailType
            maxLength: 50
          - name: description
            type: string
            in: query
            description: description of the AccountDetailType
            maxLength: 50
          - name: tableName
            type: string
            in: query
            description: table name of the AccountDetailType
            maxLength: 25
          - name: columnName
            type: string
            in: query
            description: column name of the AccountDetailType
            maxLength: 25
          - name: attributeName
            type: string
            in: query
            description: attribute name of the AccountDetailType
            maxLength: 50
          - name: active
            type: boolean
            in: query
            description: Whether AccountDetailType is Active or not. If the value is TRUE, then AccountDetailType is active,If the value is FALSE then AccountDetailType is inactive,Default value is true
          - name: fullyQualifiedName
            type: string
            in: query
            description: fully qualified name of the AccountDetailType
            maxLength: 250
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountDetailType retrieved Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailtypes/_create:
      post:
        summary: Create  new  accountdetailtypes
        description: Create  new accountdetailtypes
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountDetailTypeRequest'
        responses:
          201:
            description: AccountDetailType created Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailtypes/{uniqueId}/_update:
      post:
        summary: Update any of the accountdetailtypes
        description: Update any of the accountdetailtypes
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailTypeRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/AccountDetailTypeRequest'
        responses:
          200:
            description: AccountDetailType update Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /accountdetailkeys/_search:
      post:
        summary: Get the list of accountdetailkeys
        description: accountdetailkeys
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: groupId
            type: integer
            format: int32
            in: query
            description: group id of the AccountDetailKey
          - name: name
            type: string
            in: query
            description: name of the AccountDetailKey
            maxLength: 128
          - name: key
            type: integer
            format: int32
            in: query
            description: key of the AccountDetailKey
          - name: accountDetailType
            type: integer
            format: int64
            in: query
            description: account detail type of the AccountDetailKey
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountDetailKey retrieved Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailkeys/_create:
      post:
        summary: Create  new  accountdetailkeys
        description: Create  new accountdetailkeys
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailKeyRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountDetailKeyRequest'
        responses:
          201:
            description: AccountDetailKey created Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailkeys/{uniqueId}/_update:
      post:
        summary: Update any of the accountdetailkeys
        description: Update any of the accountdetailkeys
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailKeyRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/AccountDetailKeyRequest'
        responses:
          200:
            description: AccountDetailKey update Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /accountentities/_search:
      post:
        summary: Get the list of accountentities
        description: accountentities
        tags: 
          - Masters
          - AccountEntity
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: accountDetailType
            type: integer
            format: int64
            in: query
            description: account detail type of the AccountEntity
          - name: code
            type: string
            in: query
            description: code of the AccountEntity
            maxLength: 25
          - name: name
            type: string
            in: query
            description: name of the AccountEntity
            maxLength: 350
          - name: active
            type: boolean
            in: query
            description: Whether AccountEntity is Active or not. If the value is TRUE, then AccountEntity is active,If the value is FALSE then AccountEntity is inactive,Default value is true
          - name: description
            type: string
            in: query
            description: description of the AccountEntity
            maxLength: 256
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountEntity retrieved Successfully
            schema:
              $ref: '#/definitions/AccountEntityResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountentities/_create:
      post:
        summary: Create  new  accountentities
        description: Create  new accountentities
        tags: 
          - Masters
          - AccountEntity
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountEntityRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountEntityRequest'
        responses:
          201:
            description: AccountEntity created Successfully
            schema:
              $ref: '#/definitions/AccountEntityResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountentities/{uniqueId}/_update:
      post:
        summary: Update any of the accountentities
        description: Update any of the accountentities
        tags: 
          - Masters
          - AccountEntity
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountEntityRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/AccountEntityRequest'
        responses:
          200:
            description: AccountEntity update Successfully
            schema:
              $ref: '#/definitions/AccountEntityResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /accountcodepurposes/_search:
      post:
        summary: Get the list of accountcodepurposes
        description: accountcodepurposes
        tags: 
          - Masters
          - AccountCodePurpose
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the AccountCodePurpose
            maxLength: 256
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountCodePurpose retrieved Successfully
            schema:
              $ref: '#/definitions/AccountCodePurposeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountcodepurposes/_create:
      post:
        summary: Create  new  accountcodepurposes
        description: Create  new accountcodepurposes
        tags: 
          - Masters
          - AccountCodePurpose
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountCodePurposeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountCodePurposeRequest'
        responses:
          201:
            description: AccountCodePurpose created Successfully
            schema:
              $ref: '#/definitions/AccountCodePurposeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountcodepurposes/{uniqueId}/_update:
      post:
        summary: Update any of the accountcodepurposes
        description: Update any of the accountcodepurposes
        tags: 
          - Masters
          - AccountCodePurpose
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountCodePurposeRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/AccountCodePurposeRequest'
        responses:
          200:
            description: AccountCodePurpose update Successfully
            schema:
              $ref: '#/definitions/AccountCodePurposeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /chartofaccounts/_search:
      post:
        summary: Get the list of chartofaccounts
        description: chartofaccounts
        tags: 
          - Masters
          - ChartOfAccount
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: glcode
            type: string
            in: query
            description: glcode of the ChartOfAccount
            maxLength: 16
          - name: name
            type: string
            in: query
            description: name of the ChartOfAccount
            maxLength: 128
          - name: accountCodePurpose
            type: integer
            format: int64
            in: query
            description: account code purpose of the ChartOfAccount
          - name: desciption
            type: string
            in: query
            description: desciption of the ChartOfAccount
            maxLength: 256
          - name: isActiveForPosting
            type: boolean
            in: query
            description: is active for posting of the ChartOfAccount
          - name: parentId
            type: integer
            format: int64
            in: query
            description: parent id of the ChartOfAccount
          - name: type
            type: string
            in: query
            description: type of the ChartOfAccount
          - name: classification
            type: integer
            format: int64
            in: query
            description: classification of the ChartOfAccount
          - name: functionRequired
            type: boolean
            in: query
            description: function required of the ChartOfAccount
          - name: budgetCheckRequired
            type: boolean
            in: query
            description: budget check required of the ChartOfAccount
          - name: majorCode
            type: string
            in: query
            description: major code of the ChartOfAccount
            maxLength: 16
          - name: isSubLedger
            type: boolean
            in: query
            description: is sub ledger of the ChartOfAccount
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: ChartOfAccount retrieved Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /chartofaccounts/_create:
      post:
        summary: Create  new  chartofaccounts
        description: Create  new chartofaccounts
        tags: 
          - Masters
          - ChartOfAccount
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: chartOfAccountRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/ChartOfAccountRequest'
        responses:
          201:
            description: ChartOfAccount created Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /chartofaccounts/{uniqueId}/_update:
      post:
        summary: Update any of the chartofaccounts
        description: Update any of the chartofaccounts
        tags: 
          - Masters
          - ChartOfAccount
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: chartOfAccountRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/ChartOfAccountRequest'
        responses:
          200:
            description: ChartOfAccount update Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /chartofaccountdetails/_search:
      post:
        summary: Get the list of chartofaccountdetails
        description: chartofaccountdetails
        tags: 
          - Masters
          - ChartOfAccountDetail
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: chartOfAccount
            type: integer
            format: int64
            in: query
            description: chart of account of the ChartOfAccountDetail
          - name: accountDetailType
            type: integer
            format: int64
            in: query
            description: account detail type of the ChartOfAccountDetail
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: ChartOfAccountDetail retrieved Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountDetailResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /chartofaccountdetails/_create:
      post:
        summary: Create  new  chartofaccountdetails
        description: Create  new chartofaccountdetails
        tags: 
          - Masters
          - ChartOfAccountDetail
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: chartOfAccountDetailRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/ChartOfAccountDetailRequest'
        responses:
          201:
            description: ChartOfAccountDetail created Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountDetailResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /chartofaccountdetails/{uniqueId}/_update:
      post:
        summary: Update any of the chartofaccountdetails
        description: Update any of the chartofaccountdetails
        tags: 
          - Masters
          - ChartOfAccountDetail
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: chartOfAccountDetailRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/ChartOfAccountDetailRequest'
        responses:
          200:
            description: ChartOfAccountDetail update Successfully
            schema:
              $ref: '#/definitions/ChartOfAccountDetailResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /budgetgroups/_search:
      post:
        summary: Get the list of budgetgroups
        description: budgetgroups
        tags: 
          - Masters
          - BudgetGroup
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: string
            in: query
            description: comma seperated list of Ids,Maximum size=50 
          - name: name
            type: string
            in: query
            description: name of the BudgetGroup
            maxLength: 250
          - name: description
            type: string
            in: query
            description: description of the BudgetGroup
            maxLength: 250
          - name: majorCode
            type: integer
            format: int64
            in: query
            description: major code of the BudgetGroup
          - name: maxCode
            type: integer
            format: int64
            in: query
            description: max code of the BudgetGroup
          - name: minCode
            type: integer
            format: int64
            in: query
            description: min code of the BudgetGroup
          - name: accountType
            type: integer
            format: int64
            in: query
            description: account type of the BudgetGroup
          - name: budgetingType
            type: integer
            format: int64
            in: query
            description: budgeting type of the BudgetGroup
          - name: active
            type: boolean
            in: query
            description: Whether BudgetGroup is Active or not. If the value is TRUE, then BudgetGroup is active,If the value is FALSE then BudgetGroup is inactive,Default value is true
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: BudgetGroup retrieved Successfully
            schema:
              $ref: '#/definitions/BudgetGroupResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /budgetgroups/_create:
      post:
        summary: Create  new  budgetgroups
        description: Create  new budgetgroups
        tags: 
          - Masters
          - BudgetGroup
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: budgetGroupRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/BudgetGroupRequest'
        responses:
          201:
            description: BudgetGroup created Successfully
            schema:
              $ref: '#/definitions/BudgetGroupResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /budgetgroups/{uniqueId}/_update:
      post:
        summary: Update any of the budgetgroups
        description: Update any of the budgetgroups
        tags: 
          - Masters
          - BudgetGroup
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: budgetGroupRequest
            in: body
            description: common request_info
            schema:
              $ref: '#/definitions/BudgetGroupRequest'
        responses:
          200:
            description: BudgetGroup update Successfully
            schema:
              $ref: '#/definitions/BudgetGroupResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'


definitions:


    Bank:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Bank
        code:
          type: string
          description: code of the Bank
          maxLength: 50
          minLength: 1
        name:
          type: string
          description: name of the Bank
          maxLength: 100
          minLength: 2
        description:
          type: string
          description: description of the Bank
          maxLength: 250
        active:
          type: boolean
          description: Whether Bank is Active or not. If the value is TRUE, then Bank is active,If the value is FALSE then Bank is inactive,Default value is true
        type:
          type: string
          description: type of the Bank
          maxLength: 50
          required:
          - code
          - name
          - active
          - type
    BankRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        banks:
          type: array
          items:
            $ref: '#/definitions/Bank'
    BankResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        banks:
          type: array
          items:
            $ref: '#/definitions/Bank'
        page:
          $ref: '#/definitions/Page'

    BankBranch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the BankBranch
        bank:
          $ref: "#/definitions/Bank"
        code:
          type: string
          description: code of the BankBranch
          maxLength: 50
          minLength: 1
        name:
          type: string
          description: name of the BankBranch
          maxLength: 50
          minLength: 1
          pattern: '^[a-zA-Z0-9_]*$'
        address:
          type: string
          description: address of the BankBranch
          maxLength: 50
          minLength: 1
        address2:
          type: string
          description: address2 of the BankBranch
          maxLength: 50
        city:
          type: string
          description: city of the BankBranch
          maxLength: 50
        state:
          type: string
          description: state of the BankBranch
          maxLength: 50
        pincode:
          type: string
          description: pincode of the BankBranch
          maxLength: 50
        phone:
          type: string
          description: Phone number of the BankBranch
          maxLength: 15
        fax:
          type: string
          description: Fax number of the BankBranch
          maxLength: 15
        contactPerson:
          type: string
          description: contact person of the BankBranch
          maxLength: 50
        active:
          type: boolean
          description: Whether BankBranch is Active or not. If the value is TRUE, then BankBranch is active,If the value is FALSE then BankBranch is inactive,Default value is true
        description:
          type: string
          description: description of the BankBranch
          maxLength: 256
        micr:
          type: string
          description: MICR Code of the BankBranch
          maxLength: 50
          required:
          - bank
          - code
          - name
          - address
          - active
    BankBranchRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        bankBranchs:
          type: array
          items:
            $ref: '#/definitions/BankBranch'
    BankBranchResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        bankBranchs:
          type: array
          items:
            $ref: '#/definitions/BankBranch'
        page:
          $ref: '#/definitions/Page'

    BankAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the BankAccount
        bankBranch:
          $ref: "#/definitions/BankBranch"
        chartOfAccount:
          $ref: "#/definitions/ChartOfAccount"
        fund:
          $ref: "#/definitions/Fund"
        accountNumber:
          type: string
          description: account number of the BankAccount
          maxLength: 25
        accountType:
          type: string
          description: account type of the BankAccount
        description:
          type: string
          description: description of the BankAccount
          maxLength: 256
        active:
          type: boolean
          description: Whether BankAccount is Active or not. If the value is TRUE, then BankAccount is active,If the value is FALSE then BankAccount is inactive,Default value is true
        payTo:
          type: string
          description: pay to of the BankAccount
          maxLength: 100
        type:
          $ref: "#/definitions/BankAccountType"
          required:
          - accountNumber
          - active
          - type
    BankAccountRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        bankAccounts:
          type: array
          items:
            $ref: '#/definitions/BankAccount'
    BankAccountResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        bankAccounts:
          type: array
          items:
            $ref: '#/definitions/BankAccount'
        page:
          $ref: '#/definitions/Page'

    FinancialYear:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the FinancialYear
        finYearRange:
          type: string
          description: fin year range of the FinancialYear
          maxLength: 25
          minLength: 1
        startingDate:
          type: string
          format: date
          description: starting date of the FinancialYear
        endingDate:
          type: string
          format: date
          description: ending date of the FinancialYear
        active:
          type: boolean
          description: Whether FinancialYear is Active or not. If the value is TRUE, then FinancialYear is active,If the value is FALSE then FinancialYear is inactive,Default value is true
        isActiveForPosting:
          type: boolean
          description: is active for posting of the FinancialYear
        isClosed:
          type: boolean
          description: is closed of the FinancialYear
        transferClosingBalance:
          type: boolean
          description: transfer closing balance of the FinancialYear
          required:
          - finYearRange
          - startingDate
          - endingDate
          - active
          - isActiveForPosting
    FinancialYearRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        financialYears:
          type: array
          items:
            $ref: '#/definitions/FinancialYear'
    FinancialYearResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        financialYears:
          type: array
          items:
            $ref: '#/definitions/FinancialYear'
        page:
          $ref: '#/definitions/Page'

    FiscalPeriod:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the FiscalPeriod
        name:
          type: string
          description: name of the FiscalPeriod
          maxLength: 25
          minLength: 1
        financialYear:
          $ref: "#/definitions/FinancialYear"
        startingDate:
          type: string
          format: date
          description: starting date of the FiscalPeriod
        endingDate:
          type: string
          format: date
          description: ending date of the FiscalPeriod
        active:
          type: boolean
          description: Whether FiscalPeriod is Active or not. If the value is TRUE, then FiscalPeriod is active,If the value is FALSE then FiscalPeriod is inactive,Default value is true
        isActiveForPosting:
          type: boolean
          description: is active for posting of the FiscalPeriod
        isClosed:
          type: boolean
          description: is closed of the FiscalPeriod
          required:
          - name
          - financialYear
          - startingDate
          - endingDate
          - active
          - isActiveForPosting
    FiscalPeriodRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        fiscalPeriods:
          type: array
          items:
            $ref: '#/definitions/FiscalPeriod'
    FiscalPeriodResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        fiscalPeriods:
          type: array
          items:
            $ref: '#/definitions/FiscalPeriod'
        page:
          $ref: '#/definitions/Page'

    Function:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Function
        name:
          type: string
          description: name of the Function
          maxLength: 128
          minLength: 2
        code:
          type: string
          description: code of the Function
          maxLength: 16
          minLength: 2
        level:
          type: integer
          format: int32
          description: level of the Function
        active:
          type: boolean
          description: Whether Function is Active or not. If the value is TRUE, then Function is active,If the value is FALSE then Function is inactive,Default value is true
        isParent:
          type: boolean
          description: is parent of the Function
        parentId:
          type: integer
          format: int64
          description: parent id of the Function
          required:
          - name
          - code
          - level
          - active
          - isParent
    FunctionRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        functions:
          type: array
          items:
            $ref: '#/definitions/Function'
    FunctionResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        functions:
          type: array
          items:
            $ref: '#/definitions/Function'
        page:
          $ref: '#/definitions/Page'

    Functionary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Functionary
        code:
          type: string
          description: code of the Functionary
          maxLength: 16
          minLength: 1
        name:
          type: string
          description: name of the Functionary
          maxLength: 256
          minLength: 1
        active:
          type: boolean
          description: Whether Functionary is Active or not. If the value is TRUE, then Functionary is active,If the value is FALSE then Functionary is inactive,Default value is true
          required:
          - code
          - name
          - active
    FunctionaryRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        functionarys:
          type: array
          items:
            $ref: '#/definitions/Functionary'
    FunctionaryResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        functionarys:
          type: array
          items:
            $ref: '#/definitions/Functionary'
        page:
          $ref: '#/definitions/Page'

    Fund:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Fund
        name:
          type: string
          description: name of the Fund
          maxLength: 50
          minLength: 2
        code:
          type: string
          description: code of the Fund
          maxLength: 50
          minLength: 2
        identifier:
          type: string
          description: identifier of the Fund
        level:
          type: integer
          format: int64
          description: level of the Fund
        parentId:
          type: integer
          format: int64
          description: parent id of the Fund
        isParent:
          type: boolean
          description: is parent of the Fund
        active:
          type: boolean
          description: Whether Fund is Active or not. If the value is TRUE, then Fund is active,If the value is FALSE then Fund is inactive,Default value is true
          required:
          - name
          - code
          - identifier
          - level
          - active
    FundRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        funds:
          type: array
          items:
            $ref: '#/definitions/Fund'
    FundResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        funds:
          type: array
          items:
            $ref: '#/definitions/Fund'
        page:
          $ref: '#/definitions/Page'

    Fundsource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Fundsource
        code:
          type: string
          description: code of the Fundsource
          maxLength: 25
          minLength: 1
        name:
          type: string
          description: name of the Fundsource
          maxLength: 25
          minLength: 1
        type:
          type: string
          description: type of the Fundsource
          maxLength: 25
          minLength: 1
        fundSource:
          type: integer
          format: int64
          description: fund source of the Fundsource
        llevel:
          type: number
          format: double
          description: llevel of the Fundsource
        active:
          type: boolean
          description: Whether Fundsource is Active or not. If the value is TRUE, then Fundsource is active,If the value is FALSE then Fundsource is inactive,Default value is true
        isParent:
          type: boolean
          description: is parent of the Fundsource
          required:
          - code
          - name
          - active
    FundsourceRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        fundsources:
          type: array
          items:
            $ref: '#/definitions/Fundsource'
    FundsourceResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        fundsources:
          type: array
          items:
            $ref: '#/definitions/Fundsource'
        page:
          $ref: '#/definitions/Page'

    Scheme:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Scheme
        fund:
          $ref: "#/definitions/Fund"
        code:
          type: string
          description: code of the Scheme
          maxLength: 25
          minLength: 1
        name:
          type: string
          description: name of the Scheme
          maxLength: 25
          minLength: 1
        validFrom:
          type: string
          format: date
          description: valid from of the Scheme
        validTo:
          type: string
          format: date
          description: valid to of the Scheme
        active:
          type: boolean
          description: Whether Scheme is Active or not. If the value is TRUE, then Scheme is active,If the value is FALSE then Scheme is inactive,Default value is true
        description:
          type: string
          description: description of the Scheme
          maxLength: 256
        boundary:
          type: integer
          format: int64
          description: boundary of the Scheme
          required:
          - validFrom
          - validTo
          - active
    SchemeRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        schemes:
          type: array
          items:
            $ref: '#/definitions/Scheme'
    SchemeResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        schemes:
          type: array
          items:
            $ref: '#/definitions/Scheme'
        page:
          $ref: '#/definitions/Page'

    SubScheme:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the SubScheme
        scheme:
          $ref: "#/definitions/Scheme"
        code:
          type: string
          description: code of the SubScheme
          maxLength: 50
          minLength: 1
        name:
          type: string
          description: name of the SubScheme
          maxLength: 50
          minLength: 1
        validFrom:
          type: string
          format: date
          description: valid from of the SubScheme
        validTo:
          type: string
          format: date
          description: valid to of the SubScheme
        active:
          type: boolean
          description: Whether SubScheme is Active or not. If the value is TRUE, then SubScheme is active,If the value is FALSE then SubScheme is inactive,Default value is true
        departmentId:
          type: integer
          format: int64
          description: department id of the SubScheme
          required:
          - scheme
          - code
          - name
          - validFrom
          - validTo
          - active
    SubSchemeRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        subSchemes:
          type: array
          items:
            $ref: '#/definitions/SubScheme'
    SubSchemeResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        subSchemes:
          type: array
          items:
            $ref: '#/definitions/SubScheme'
        page:
          $ref: '#/definitions/Page'

    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Supplier
        code:
          type: string
          description: code of the Supplier
          maxLength: 50
          minLength: 1
        name:
          type: string
          description: name of the Supplier
          maxLength: 50
          minLength: 1
        address:
          type: string
          description: address of the Supplier
          maxLength: 300
        mobile:
          type: string
          description: mobile of the Supplier
          maxLength: 10
        email:
          type: string
          description: email of the Supplier
          maxLength: 25
        description:
          type: string
          description: description of the Supplier
          maxLength: 250
        active:
          type: boolean
          description: Whether Supplier is Active or not. If the value is TRUE, then Supplier is active,If the value is FALSE then Supplier is inactive,Default value is true
        panNo:
          type: string
          description: pan no of the Supplier
          maxLength: 10
        tinNo:
          type: string
          description: tin no of the Supplier
          maxLength: 20
        registationNo:
          type: string
          description: registation no of the Supplier
          maxLength: 25
        bankAccount:
          type: string
          description: bank account of the Supplier
          maxLength: 25
        ifscCode:
          type: string
          description: ifsc code of the Supplier
          maxLength: 12
        bank:
          $ref: "#/definitions/Bank"
          required:
          - code
          - name
          - active
    SupplierRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        suppliers:
          type: array
          items:
            $ref: '#/definitions/Supplier'
    SupplierResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        suppliers:
          type: array
          items:
            $ref: '#/definitions/Supplier'
        page:
          $ref: '#/definitions/Page'

    AccountDetailType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountDetailType
        name:
          type: string
          description: name of the AccountDetailType
          maxLength: 50
          minLength: 1
        description:
          type: string
          description: description of the AccountDetailType
          maxLength: 50
          minLength: 1
        tableName:
          type: string
          description: table name of the AccountDetailType
          maxLength: 25
        columnName:
          type: string
          description: column name of the AccountDetailType
          maxLength: 25
        attributeName:
          type: string
          description: attribute name of the AccountDetailType
          maxLength: 50
        active:
          type: boolean
          description: Whether AccountDetailType is Active or not. If the value is TRUE, then AccountDetailType is active,If the value is FALSE then AccountDetailType is inactive,Default value is true
        fullyQualifiedName:
          type: string
          description: fully qualified name of the AccountDetailType
          maxLength: 250
          minLength: 1
          required:
          - name
          - description
          - active
    AccountDetailTypeRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountDetailTypes:
          type: array
          items:
            $ref: '#/definitions/AccountDetailType'
    AccountDetailTypeResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountDetailTypes:
          type: array
          items:
            $ref: '#/definitions/AccountDetailType'
        page:
          $ref: '#/definitions/Page'

    AccountDetailKey:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountDetailKey
        groupId:
          type: integer
          format: int32
          description: group id of the AccountDetailKey
        name:
          type: string
          description: name of the AccountDetailKey
          maxLength: 128
        key:
          type: integer
          format: int32
          description: key of the AccountDetailKey
        accountDetailType:
          $ref: "#/definitions/AccountDetailType"
          required:
          - accountDetailType
    AccountDetailKeyRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountDetailKeys:
          type: array
          items:
            $ref: '#/definitions/AccountDetailKey'
    AccountDetailKeyResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountDetailKeys:
          type: array
          items:
            $ref: '#/definitions/AccountDetailKey'
        page:
          $ref: '#/definitions/Page'

    AccountEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountEntity
        accountDetailType:
          $ref: "#/definitions/AccountDetailType"
        code:
          type: string
          description: code of the AccountEntity
          maxLength: 25
          minLength: 1
        name:
          type: string
          description: name of the AccountEntity
          maxLength: 350
          minLength: 1
        active:
          type: boolean
          description: Whether AccountEntity is Active or not. If the value is TRUE, then AccountEntity is active,If the value is FALSE then AccountEntity is inactive,Default value is true
        description:
          type: string
          description: description of the AccountEntity
          maxLength: 256
          required:
          - accountDetailType
          - code
          - name
          - active
    AccountEntityRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountEntitys:
          type: array
          items:
            $ref: '#/definitions/AccountEntity'
    AccountEntityResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountEntitys:
          type: array
          items:
            $ref: '#/definitions/AccountEntity'
        page:
          $ref: '#/definitions/Page'

    AccountCodePurpose:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountCodePurpose
        name:
          type: string
          description: name of the AccountCodePurpose
          maxLength: 256
          minLength: 3
          required:
          - name
    AccountCodePurposeRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountCodePurposes:
          type: array
          items:
            $ref: '#/definitions/AccountCodePurpose'
    AccountCodePurposeResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountCodePurposes:
          type: array
          items:
            $ref: '#/definitions/AccountCodePurpose'
        page:
          $ref: '#/definitions/Page'

    ChartOfAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the ChartOfAccount
        glcode:
          type: string
          description: glcode of the ChartOfAccount
          maxLength: 16
          minLength: 1
        name:
          type: string
          description: name of the ChartOfAccount
          maxLength: 128
          minLength: 5
        accountCodePurpose:
          $ref: "#/definitions/AccountCodePurpose"
        desciption:
          type: string
          description: desciption of the ChartOfAccount
          maxLength: 256
        isActiveForPosting:
          type: boolean
          description: is active for posting of the ChartOfAccount
        parentId:
          type: integer
          format: int64
          description: parent id of the ChartOfAccount
        type:
          type: string
          description: type of the ChartOfAccount
        classification:
          type: integer
          format: int64
          description: classification of the ChartOfAccount
        functionRequired:
          type: boolean
          description: function required of the ChartOfAccount
        budgetCheckRequired:
          type: boolean
          description: budget check required of the ChartOfAccount
        majorCode:
          type: string
          description: major code of the ChartOfAccount
          maxLength: 16
        isSubLedger:
          type: boolean
          description: is sub ledger of the ChartOfAccount
          required:
          - glcode
          - name
          - isActiveForPosting
          - type
          - classification
          - functionRequired
          - budgetCheckRequired
    ChartOfAccountRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        chartOfAccounts:
          type: array
          items:
            $ref: '#/definitions/ChartOfAccount'
    ChartOfAccountResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        chartOfAccounts:
          type: array
          items:
            $ref: '#/definitions/ChartOfAccount'
        page:
          $ref: '#/definitions/Page'

    ChartOfAccountDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the ChartOfAccountDetail
        chartOfAccount:
          $ref: "#/definitions/ChartOfAccount"
        accountDetailType:
          $ref: "#/definitions/AccountDetailType"
          required:
          - chartOfAccount
          - accountDetailType
    ChartOfAccountDetailRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        chartOfAccountDetails:
          type: array
          items:
            $ref: '#/definitions/ChartOfAccountDetail'
    ChartOfAccountDetailResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        chartOfAccountDetails:
          type: array
          items:
            $ref: '#/definitions/ChartOfAccountDetail'
        page:
          $ref: '#/definitions/Page'

    BudgetGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the BudgetGroup
        name:
          type: string
          description: name of the BudgetGroup
          maxLength: 250
          minLength: 1
        description:
          type: string
          description: description of the BudgetGroup
          maxLength: 250
        majorCode:
          $ref: "#/definitions/ChartOfAccount"
        maxCode:
          $ref: "#/definitions/ChartOfAccount"
        minCode:
          $ref: "#/definitions/ChartOfAccount"
        accountType:
          $ref: "#/definitions/BudgetAccountType"
        budgetingType:
          $ref: "#/definitions/BudgetingType"
        active:
          type: boolean
          description: Whether BudgetGroup is Active or not. If the value is TRUE, then BudgetGroup is active,If the value is FALSE then BudgetGroup is inactive,Default value is true
    BudgetGroupRequest:
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        budgetGroups:
          type: array
          items:
            $ref: '#/definitions/BudgetGroup'
    BudgetGroupResponse:
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        budgetGroups:
          type: array
          items:
            $ref: '#/definitions/BudgetGroup'
        page:
          $ref: '#/definitions/Page'

    ResponseInfo:
     type: object
     properties:
      resMsgId:
       type: string
       description: res msg id of the ResponseInfo
      status:
       type: string
       description: status of the ResponseInfo
      apiId:
       type: string
       description: api id of the ResponseInfo
      ver:
       type: string
       description: ver of the ResponseInfo
      ts:
       type: string
       format: date
       description: ts of the ResponseInfo
      key:
       type: string
       description: key of the ResponseInfo
      tenantId:
       type: string
       description: tenant id of the ResponseInfo
    RequestInfo:
     type: object
     properties:
      action:
       type: string
       description: action of the RequestInfo
      did:
       type: string
       description: did of the RequestInfo
      msgId:
       type: string
       description: msg id of the RequestInfo
      requesterId:
       type: string
       description: requester id of the RequestInfo
      authToken:
       type: string
       description: auth token of the RequestInfo
      apiId:
       type: string
       description: api id of the RequestInfo
      ver:
       type: string
       description: ver of the RequestInfo
      ts:
       type: string
       format: date
       description: ts of the RequestInfo
      key:
       type: string
       description: key of the RequestInfo
      tenantId:
       type: string
       description: tenant id of the RequestInfo
    ErrorResponse:
     type: object
     properties:
      responseInfo:
        $ref: "#/definitions/ResponseInfo"
      error:
        $ref: "#/definitions/Error"
    Error:
     type: object
     properties:
      code:
       type: integer
       format: int32
       description: Code of the Error
      message:
       type: string
       description: Message of the Error
      description:
       type: string
       description: Description of the Error
      filelds:
       type: array
       description: Filelds of the Error
       items:
         $ref: "#/definitions/FieldError"
    FieldError:
     type: object
     properties:
      code:
       type: string
       description: Code of the FieldError
      description:
       type: string
       description: Description of the FieldError
    Page:
     type: object
     properties:
      pageSize:
       type: integer
       format: int32
       description: Page Size

